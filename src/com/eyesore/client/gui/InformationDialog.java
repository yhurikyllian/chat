/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.eyesore.client.gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author sora
 */
public class InformationDialog extends javax.swing.JDialog implements com.eyesore.client.engine.CommonSettings {
    
    protected boolean isConnect;
    private Properties properties;
    private ChatClient chatClient;

    /**
     * Creates new form InformationDialog
     */
    public InformationDialog(ChatClient parent, boolean modal) {
        super(parent, PRODUCT_NAME+" - Login", modal);
                
        initComponents();
        initDefault(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtServerName = new javax.swing.JTextField();
        txtServerPort = new javax.swing.JTextField();
        chkProxy = new javax.swing.JCheckBox();
        txtProxyHost = new javax.swing.JTextField();
        txtProxyPort = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Nick name");

        jLabel2.setText("Server name");

        jLabel3.setText("Server port");

        jLabel4.setText("Proxy");

        jLabel5.setText("Proxy host");

        jLabel6.setText("Proxy port");

        txtUserName.setText("jTextField1");

        txtServerName.setText("jTextField2");

        txtServerPort.setText("jTextField3");

        chkProxy.setText("jCheckBox1");

        txtProxyHost.setText("jTextField4");

        txtProxyPort.setText("jTextField5");

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnQuit.setText("Quit");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUserName)
                            .addComponent(txtServerName)
                            .addComponent(txtServerPort)
                            .addComponent(txtProxyHost)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkProxy)
                                .addGap(0, 165, Short.MAX_VALUE))
                            .addComponent(txtProxyPort)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnConnect)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtServerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(chkProxy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtProxyHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtProxyPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConnect)
                    .addComponent(btnQuit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
        connect();
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        // TODO add your handling code here:
        quit();
    }//GEN-LAST:event_btnQuitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InformationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InformationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InformationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InformationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InformationDialog dialog = new InformationDialog(new ChatClient(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnQuit;
    javax.swing.JCheckBox chkProxy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    javax.swing.JTextField txtProxyHost;
    javax.swing.JTextField txtProxyPort;
    javax.swing.JTextField txtServerName;
    javax.swing.JTextField txtServerPort;
    javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Insert data from data.properties to GUI object
     * 
     * @param parent Jframe 
     */
    private void initDefault(ChatClient chatClient){
        
        
        this.chatClient = chatClient;
        isConnect = false;
        properties = new Properties();
        
        try {	
            String l = System.getProperty("user.dir") + "/data.properties";            
            properties.load(new FileInputStream(new File(l)));
        } catch (IOException ex) {
            Logger.getLogger(InformationDialog.class.getName()).log(Level.SEVERE, null, ex);
        } //catch (NullPointerException nExc){}
        
        txtUserName.setText(properties.getProperty("TurtleUserName"));
        if (properties.getProperty("TurtleServerName") != null)
            txtServerName.setText(properties.getProperty("TurtleServerName"));
        else
            txtServerName.setText("turtleindia.dns2go.com");
        
        if (properties.getProperty("TurtleServerPort") != null)
            txtServerPort.setText(properties.getProperty("TurtleServerPort"));
        else
            txtServerPort.setText("1436");
        
        chkProxy.setSelected(Boolean.valueOf(properties.getProperty("TurtleProxyState")).booleanValue());
        
        txtProxyHost.setText(properties.getProperty("TurtleProxyHost"));
        txtProxyPort.setText(properties.getProperty("TurtleProxyPort"));
        
        chatClient.show();
        chatClient.setVisible(true);
    }
    
    /**
     * Make a connection and write all
     * data into data.properties
     */
    private void connect(){
        isConnect = true;
        FileOutputStream fout = null;
        
        try {
            fout = new FileOutputStream(new File("data.properties"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(InformationDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(chkProxy.isSelected() == true){
            properties.setProperty("TurtleProxyState","true");
        } else{
            properties.setProperty("TurtleProxyState","false");
        }
        
        properties.setProperty("TurtleUserName",txtUserName.getText());
        properties.setProperty("TurtleServerName",txtServerName.getText());
        properties.setProperty("TurtleServerPort",txtServerPort.getText());
        properties.setProperty("TurtleProxyHost",txtProxyHost.getText());
        properties.setProperty("TurtleProxyPort",txtProxyPort.getText());
        properties.save(fout,PRODUCT_NAME);
        dispose();
        
    }
    
    /**
     * Quit from program
     */
    private void quit(){
        isConnect = false;
        dispose();
    }

}
